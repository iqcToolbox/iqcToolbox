# Runs static analysis on .m files

name: Static Analysis

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  # This workflow executes a matrix of jobs for different OS and MATLAB versions
  static-analysis:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out base commit of merge
      - name: Base checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          fetch-depth: 0

      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v1

      # Use static analyzer and rules from HEAD commit
#        run: git checkout ${{ github.event.pull_request.head.sha }} -- +tests/static_analyzer_base.m +tests/chkcode_rules.txt
      - name: Checkout static_analyzer and rules
        run: gh pr checkout ${{ github.event.pull_request.number }}; pr_commit=$(git rev-parse HEAD);  git checkout ${{ github.event.pull_request.base.sha }}; git checkout $pr_commit -- +tests/static_analyzer_base.m +tests/chkcode_rules.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # Run static analysis on base commit
      - name: Base static analysis
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(genpath('src')); [info, files] = tests.static_analyzer_base; save('old_results', 'info', 'files');

      # Save old results and checkout head commit
      - name: Switching to head commit
        run: git add old_results.mat; git stash; gh pr checkout ${{ github.event.pull_request.number }}; git stash pop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Run static analysis on merge commit
      - name: Diff static analysis on merge commit
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(genpath('src')); load('old_results', 'info', 'files'); [diff_info, diff_files, new_error] = tests.static_analyzer_diff(info, files); assert(~new_error);